variables:
  POSTGRES_DB: test
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: super_secret_password__DO_NOT_STEAL

cache:
  untracked: true

stages:
  - Code climate
  - Unit tests
  - End to end tests

rubocop:
  stage: Code climate
  tags:
    - ci-ruby-latest
  script:
    - gem install rubocop --no-ri --no-rdoc
    - cd backend
    - rubocop -R

jest:
  stage: Unit tests
  image: mhart/alpine-node:latest
  tags:
    - ci-alpine-latest
  script:
    - cd frontend
    - yarn install
    - yarn quicktest

rspec:
  stage: Unit tests
  variables:
    CI_DATABASE: postgres
  services:
    - postgres:alpine
  tags:
    - ci-ruby-latest
  script:
    - "echo gem: --no-ri --no-rdoc >> ~/.gemrc"
    - cd backend
    - gem install bundler
    - bundle install --jobs $(nproc)
    - bundle exec rspec

cypress:
  stage: End to end tests
  image: cypress/base:ubuntu16
  # We need the database
  services:
    - postgres:alpine
  only:
    - master
    - development
  variables:
    CI_DATABASE: postgres
  tags:
    - ci-alpine-latest
  # TODO: Build our own Docker image with all dependencies
  script:
    - apt-get -qq -y update && apt-get -qq -y install ruby ruby-dev zlib1g-dev liblzma-dev build-essential patch libpq-dev nodejs
    - cd backend
    - gem install bundle
    - bundle install
    - bundle exec rails db:create db:migrate db:seed
    - bundle exec rails s & > /dev/null
    - cd ../frontend
    - npm install -g yarn
    - yarn install
    - yarn dev & > /dev/null
    - yarn run cypress run
