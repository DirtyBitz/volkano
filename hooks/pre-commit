#!/bin/bash

STAGED_FILES=$(git diff --cached --name-only)
if [[ -z "$STAGED_FILES" ]]; then
    exit 0
fi

# Redirect output to stderr.
exec 1>&2

# Helper functions
allow() {
    echo -n "[$1] -> "
    ${@: -1}
    echo "âœ“"
}

flunk() {
    printf "$*"
    exit 1
}

# The actual assertions
only_ascii_chars() {
    if git rev-parse --verify HEAD >/dev/null 2>&1
    then
        against=HEAD
    else
        # Initial commit: diff against an empty tree object
        against=4b825dc642cb6eb9a060e54bf8d69288fbee4904
    fi
    allownonascii=$(git config --bool hooks.allownonascii)
    if [[ $allownonascii != "true" &&
            $(git diff --staged --name-only --diff-filter=A -z $against |
    LC_ALL=C tr -d '[ -~]\0' | wc -c | tr -d '[:space:]') != 0 ]];
    then
        flunk "Error: Attempt to add a non-ASCII file name. This can cause problems if you want to work with people on other platforms. To be portable it is advisable to rename the file. If you know what you are doing you can disable this check using: git config hooks.allownonascii true"
    fi
}

proper_whitespace() {
    if git rev-parse --verify HEAD >/dev/null 2>&1
    then
        against=HEAD
    else
        # Initial commit: diff against an empty tree object
        against=4b825dc642cb6eb9a060e54bf8d69288fbee4904
    fi
    local whitespace_errors=$(git diff-index --check --cached $against --)
    if [[ ! -z $whitespace_errors ]]; then
        flunk "$whitespace_errors"
    fi
}

# Is this DSL shit just being too clever?
allow "file names" that contain only_ascii_chars
allow "files" that contain proper_whitespace
